[package]
name = "tidy-json"
version = "0.2.2"
license = "MIT"
edition = "2021"
default-run = "tidy-json"
description = "A cli for tidying up json files."
homepage = "https://github.com/todor-a/tidy-json"
repository = "https://github.com/todor-a/tidy-json"

[dependencies]
clap = { version = "4.0", features = ["derive"] }
glob = "0.3"
ignore = "0.4"
serde_json = {version = "1.0", features = ["preserve_order"]}
thiserror = "1.0"
log = "0.4"
env_logger = "0.11"
rayon = "1.5"
colored = "2.0"
rand = "0.8"
anyhow = "1.0"

[dev-dependencies]
insta = {version = "1.39.0", features = ["json"]}
tempfile = "3.2"
assert_cmd = "2.0.14"
predicates = "3.1.0"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.21.0"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "homebrew"]
# A GitHub repo to push Homebrew formulas to
tap = "todor-a/homebrew-tap"
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc"]
# The archive format to use for windows builds (defaults .zip)
windows-archive = ".tar.gz"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Whether to install an updater program
install-updater = true
